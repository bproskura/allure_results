{"uid":"a0a947a4f5643aae","name":"Complete running deal","fullName":"tests.deals.test_deal_actions.TestDealActions#test_complete_running_deal","historyId":"e60fa26226d1f5840444df4eca92509a","time":{"start":1728148657504,"stop":1728148683975,"duration":26471},"descriptionHtml":"<h4 style=\"margin: -10px 0 5px;\"><span style=\"margin: 9px 4px 9px 0; cursor: pointer\" class=\"fa fa-files-o\" data-copy=\"test_complete_running_deal\"></span>test_complete_running_deal</h4>\n    Collected at <span class=\"label label_status_passed\">2024-10-05 17:08</span><br><br>","status":"broken","statusMessage":"requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: https://dev.api.darkbot.io/app/trade-requests/d4bec695-a9de-40c6-a2f3-b26def23cf8d/cancel","statusTrace":"self = <deals.test_deal_actions.TestDealActions object at 0x7f44b106d040>\npage = <Page url='https://darkbot:98713456@dev.app.darkbot.io/deals/6bfb37e3-1951-4345-9c64-0b4a2158c67f'>\ncreate_session = <function create_session.<locals>._create_session at 0x7f44a1017920>\n\n    @allure.title(\"Complete running deal\")\n    def test_complete_running_deal(self, page: Page, create_session):\n        deal_details_page = DealDetailsPage(page)\n        login_page = LoginPage(page)\n        notifications = Notifications(page)\n        deals_api = DealsApi()\n        danger_zone = DangerZone(page)\n        toast_message = \"Deal will be completed as soon as possible\"\n    \n        with allure.step(\"Test preparation\"):\n            running_deals = deals_api.get_poloniex_running_deals()\n            total_deals = running_deals['total']\n            deal_id = None\n    \n            if total_deals == 0:\n                pytest.skip(\"There are no deals in Running status\")\n    \n            for deal in running_deals['items']:\n                if deal['actions']['complete']:\n                    deal_id = deal['id']\n                    break\n    \n            if deal_id is None:\n                pytest.skip(\"There are no deals with 'complete' action available\")\n    \n            login_page.goto()\n            create_session()\n    \n        with allure.step(f\"Go to deals details page with id: {deal_id}\"):\n            deal_details_page.goto(endpoint=deal_details_page.slug.format(deal_id))\n    \n        with allure.step(f\"Force complete deal\"):\n            danger_zone.click_danger_zone()\n            danger_zone.click_complete_deal_btn()\n            danger_zone.click_confirm_complete_deal_btn()\n    \n        with allure.step(f\"Verify deal complete\"):\n            assert notifications.wait_for_success_toast() is True\n            assert notifications.get_success_toast_message() == toast_message\n            expect(deal_details_page.get_open_trade_request_block()).to_be_visible()\n            assert 's' in deal_details_page.get_open_trade_request_type()\n    \n        with allure.step(\"Cancel deal completing\"):\n            tr_id = deals_api.get_deal_open_trade_request_id(deal_id)\n>           response = deals_api.cancel_deal_trade_request(tr_id)\n\ncreate_session = <function create_session.<locals>._create_session at 0x7f44a1017920>\ndanger_zone = <src.pages.danger_zone.DangerZone object at 0x7f44a10bb110>\ndeal       = {'actions': {'cancel': False, 'complete': True, 'restart': False, 'run': False, ...}, 'assessedValue': {'amount': '0.1030880108', 'asset': 'USDT'}, 'assets': {'base': 'OETH', 'quote': 'USDT'}, 'avgBuyRate': '2510.631262525', ...}\ndeal_details_page = <src.pages.deal_details_page.deal_details_page.DealDetailsPage object at 0x7f44a10baae0>\ndeal_id    = '6bfb37e3-1951-4345-9c64-0b4a2158c67f'\ndeals_api  = <src.api.deals.deals_api.DealsApi object at 0x7f44a10bac30>\nlogin_page = <src.pages.login_page.login_page.LoginPage object at 0x7f44a10bab70>\nnotifications = <src.pages.notifications.Notifications object at 0x7f44a10baba0>\npage       = <Page url='https://darkbot:98713456@dev.app.darkbot.io/deals/6bfb37e3-1951-4345-9c64-0b4a2158c67f'>\nrunning_deals = {'items': [{'actions': {'cancel': False, 'complete': True, 'restart': False, 'run': False, ...}, 'assessedValue': {'am...tadata': {'statistics': {'cancelled': 23, 'completed': 429, 'ready': 2227, 'running': 32}}, 'page': 1, 'pages': 3, ...}\nself       = <deals.test_deal_actions.TestDealActions object at 0x7f44b106d040>\ntoast_message = 'Deal will be completed as soon as possible'\ntotal_deals = 26\ntr_id      = 'd4bec695-a9de-40c6-a2f3-b26def23cf8d'\n\ntests/deals/test_deal_actions.py:96: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsrc/api/deals/deals_api.py:49: in cancel_deal_trade_request\n    return self.post(endpoint)\n        endpoint   = 'app/trade-requests/d4bec695-a9de-40c6-a2f3-b26def23cf8d/cancel'\n        self       = <src.api.deals.deals_api.DealsApi object at 0x7f44a10bac30>\n        tr_id      = 'd4bec695-a9de-40c6-a2f3-b26def23cf8d'\nsrc/api/base_api.py:42: in post\n    response.raise_for_status()\n        data       = None\n        endpoint   = 'app/trade-requests/d4bec695-a9de-40c6-a2f3-b26def23cf8d/cancel'\n        response   = <Response [500]>\n        self       = <src.api.deals.deals_api.DealsApi object at 0x7f44a10bac30>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [500]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: https://dev.api.darkbot.io/app/trade-requests/d4bec695-a9de-40c6-a2f3-b26def23cf8d/cancel\n\nhttp_error_msg = '500 Server Error: Internal Server Error for url: https://dev.api.darkbot.io/app/trade-requests/d4bec695-a9de-40c6-a2f3-b26def23cf8d/cancel'\nreason     = 'Internal Server Error'\nself       = <Response [500]>\n\n/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/requests/models.py:1021: HTTPError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"context","time":{"start":1728148657314,"stop":1728148657468,"duration":154},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"page","time":{"start":1728148657468,"stop":1728148657503,"duration":35},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"create_session","time":{"start":1728148657503,"stop":1728148657503,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"descriptionHtml":"<h4 style=\"margin: -10px 0 5px;\"><span style=\"margin: 9px 4px 9px 0; cursor: pointer\" class=\"fa fa-files-o\" data-copy=\"test_complete_running_deal\"></span>test_complete_running_deal</h4>\n    Collected at <span class=\"label label_status_passed\">2024-10-05 17:08</span><br><br>","status":"broken","statusMessage":"requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: https://dev.api.darkbot.io/app/trade-requests/d4bec695-a9de-40c6-a2f3-b26def23cf8d/cancel","statusTrace":"self = <deals.test_deal_actions.TestDealActions object at 0x7f44b106d040>\npage = <Page url='https://darkbot:98713456@dev.app.darkbot.io/deals/6bfb37e3-1951-4345-9c64-0b4a2158c67f'>\ncreate_session = <function create_session.<locals>._create_session at 0x7f44a1017920>\n\n    @allure.title(\"Complete running deal\")\n    def test_complete_running_deal(self, page: Page, create_session):\n        deal_details_page = DealDetailsPage(page)\n        login_page = LoginPage(page)\n        notifications = Notifications(page)\n        deals_api = DealsApi()\n        danger_zone = DangerZone(page)\n        toast_message = \"Deal will be completed as soon as possible\"\n    \n        with allure.step(\"Test preparation\"):\n            running_deals = deals_api.get_poloniex_running_deals()\n            total_deals = running_deals['total']\n            deal_id = None\n    \n            if total_deals == 0:\n                pytest.skip(\"There are no deals in Running status\")\n    \n            for deal in running_deals['items']:\n                if deal['actions']['complete']:\n                    deal_id = deal['id']\n                    break\n    \n            if deal_id is None:\n                pytest.skip(\"There are no deals with 'complete' action available\")\n    \n            login_page.goto()\n            create_session()\n    \n        with allure.step(f\"Go to deals details page with id: {deal_id}\"):\n            deal_details_page.goto(endpoint=deal_details_page.slug.format(deal_id))\n    \n        with allure.step(f\"Force complete deal\"):\n            danger_zone.click_danger_zone()\n            danger_zone.click_complete_deal_btn()\n            danger_zone.click_confirm_complete_deal_btn()\n    \n        with allure.step(f\"Verify deal complete\"):\n            assert notifications.wait_for_success_toast() is True\n            assert notifications.get_success_toast_message() == toast_message\n            expect(deal_details_page.get_open_trade_request_block()).to_be_visible()\n            assert 's' in deal_details_page.get_open_trade_request_type()\n    \n        with allure.step(\"Cancel deal completing\"):\n            tr_id = deals_api.get_deal_open_trade_request_id(deal_id)\n>           response = deals_api.cancel_deal_trade_request(tr_id)\n\ncreate_session = <function create_session.<locals>._create_session at 0x7f44a1017920>\ndanger_zone = <src.pages.danger_zone.DangerZone object at 0x7f44a10bb110>\ndeal       = {'actions': {'cancel': False, 'complete': True, 'restart': False, 'run': False, ...}, 'assessedValue': {'amount': '0.1030880108', 'asset': 'USDT'}, 'assets': {'base': 'OETH', 'quote': 'USDT'}, 'avgBuyRate': '2510.631262525', ...}\ndeal_details_page = <src.pages.deal_details_page.deal_details_page.DealDetailsPage object at 0x7f44a10baae0>\ndeal_id    = '6bfb37e3-1951-4345-9c64-0b4a2158c67f'\ndeals_api  = <src.api.deals.deals_api.DealsApi object at 0x7f44a10bac30>\nlogin_page = <src.pages.login_page.login_page.LoginPage object at 0x7f44a10bab70>\nnotifications = <src.pages.notifications.Notifications object at 0x7f44a10baba0>\npage       = <Page url='https://darkbot:98713456@dev.app.darkbot.io/deals/6bfb37e3-1951-4345-9c64-0b4a2158c67f'>\nrunning_deals = {'items': [{'actions': {'cancel': False, 'complete': True, 'restart': False, 'run': False, ...}, 'assessedValue': {'am...tadata': {'statistics': {'cancelled': 23, 'completed': 429, 'ready': 2227, 'running': 32}}, 'page': 1, 'pages': 3, ...}\nself       = <deals.test_deal_actions.TestDealActions object at 0x7f44b106d040>\ntoast_message = 'Deal will be completed as soon as possible'\ntotal_deals = 26\ntr_id      = 'd4bec695-a9de-40c6-a2f3-b26def23cf8d'\n\ntests/deals/test_deal_actions.py:96: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsrc/api/deals/deals_api.py:49: in cancel_deal_trade_request\n    return self.post(endpoint)\n        endpoint   = 'app/trade-requests/d4bec695-a9de-40c6-a2f3-b26def23cf8d/cancel'\n        self       = <src.api.deals.deals_api.DealsApi object at 0x7f44a10bac30>\n        tr_id      = 'd4bec695-a9de-40c6-a2f3-b26def23cf8d'\nsrc/api/base_api.py:42: in post\n    response.raise_for_status()\n        data       = None\n        endpoint   = 'app/trade-requests/d4bec695-a9de-40c6-a2f3-b26def23cf8d/cancel'\n        response   = <Response [500]>\n        self       = <src.api.deals.deals_api.DealsApi object at 0x7f44a10bac30>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [500]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: https://dev.api.darkbot.io/app/trade-requests/d4bec695-a9de-40c6-a2f3-b26def23cf8d/cancel\n\nhttp_error_msg = '500 Server Error: Internal Server Error for url: https://dev.api.darkbot.io/app/trade-requests/d4bec695-a9de-40c6-a2f3-b26def23cf8d/cancel'\nreason     = 'Internal Server Error'\nself       = <Response [500]>\n\n/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/requests/models.py:1021: HTTPError","steps":[{"name":"Test preparation","time":{"start":1728148659188,"stop":1728148666479,"duration":7291},"status":"passed","steps":[{"name":"goto route","time":{"start":1728148661654,"stop":1728148663027,"duration":1373},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true},{"name":"Go to deals details page with id: 6bfb37e3-1951-4345-9c64-0b4a2158c67f","time":{"start":1728148666479,"stop":1728148667007,"duration":528},"status":"passed","steps":[{"name":"goto route","time":{"start":1728148666480,"stop":1728148667007,"duration":527},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true},{"name":"Force complete deal","time":{"start":1728148667007,"stop":1728148672179,"duration":5172},"status":"passed","steps":[{"name":"Click on danger zone","time":{"start":1728148667007,"stop":1728148672019,"duration":5012},"status":"passed","steps":[{"name":"click_element","time":{"start":1728148667007,"stop":1728148672019,"duration":5012},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"'//*[@data-testid='danger-zone-title']'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true},{"name":"Click complete deal btn","time":{"start":1728148672020,"stop":1728148672118,"duration":98},"status":"passed","steps":[{"name":"click button","time":{"start":1728148672020,"stop":1728148672117,"duration":97},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"'//*[@data-testid='danger-zone-btn-complete']'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true},{"name":"Click on confirm complete deal btn","time":{"start":1728148672118,"stop":1728148672179,"duration":61},"status":"passed","steps":[{"name":"click button","time":{"start":1728148672118,"stop":1728148672179,"duration":61},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"'//h3[text()='Confirm deal Completion']//following::*[@data-testid='danger-zone-btn-complete']'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":6,"attachmentsCount":0,"hasContent":true},{"name":"Verify deal complete","time":{"start":1728148672179,"stop":1728148680405,"duration":8226},"status":"passed","steps":[{"name":"Wait for success toast notification","time":{"start":1728148672179,"stop":1728148677517,"duration":5338},"status":"passed","steps":[{"name":"wait for selector","time":{"start":1728148672179,"stop":1728148677517,"duration":5338},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"'//div[@type='success']'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true},{"name":"Get success toast message","time":{"start":1728148677517,"stop":1728148677530,"duration":13},"status":"passed","steps":[{"name":"get_text","time":{"start":1728148677517,"stop":1728148677530,"duration":13},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"'//div[@type='success']'"},{"name":"index","value":"0"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true},{"name":"Get open trade request block title","time":{"start":1728148677530,"stop":1728148677530,"duration":0},"status":"passed","steps":[{"name":"get_locator","time":{"start":1728148677530,"stop":1728148677530,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"'//p[text()='Open trade request']'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true},{"name":"Get open trade request type","time":{"start":1728148680400,"stop":1728148680405,"duration":5},"status":"passed","steps":[{"name":"get_text","time":{"start":1728148680400,"stop":1728148680405,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"'//div[@class='mb-sm card']//span[@type='sell']'"},{"name":"index","value":"0"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":8,"attachmentsCount":0,"hasContent":true},{"name":"Cancel deal completing","time":{"start":1728148680405,"stop":1728148683974,"duration":3569},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: https://dev.api.darkbot.io/app/trade-requests/d4bec695-a9de-40c6-a2f3-b26def23cf8d/cancel\n","statusTrace":"  File \"/home/runner/work/qa-website/qa-website/tests/deals/test_deal_actions.py\", line 96, in test_complete_running_deal\n    response = deals_api.cancel_deal_trade_request(tr_id)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/qa-website/qa-website/src/api/deals/deals_api.py\", line 49, in cancel_deal_trade_request\n    return self.post(endpoint)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/qa-website/qa-website/src/api/base_api.py\", line 42, in post\n    response.raise_for_status()\n  File \"/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/requests/models.py\", line 1021, in raise_for_status\n    raise HTTPError(http_error_msg, response=self)\n","steps":[{"name":"Get deal open trade request id","time":{"start":1728148680405,"stop":1728148681573,"duration":1168},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"deal_id","value":"'6bfb37e3-1951-4345-9c64-0b4a2158c67f'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true},{"name":"Cancel deal trade request","time":{"start":1728148681573,"stop":1728148683973,"duration":2400},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 500 Server Error: Internal Server Error for url: https://dev.api.darkbot.io/app/trade-requests/d4bec695-a9de-40c6-a2f3-b26def23cf8d/cancel\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/qa-website/qa-website/src/api/deals/deals_api.py\", line 49, in cancel_deal_trade_request\n    return self.post(endpoint)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/qa-website/qa-website/src/api/base_api.py\", line 42, in post\n    response.raise_for_status()\n  File \"/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/requests/models.py\", line 1021, in raise_for_status\n    raise HTTPError(http_error_msg, response=self)\n","steps":[],"attachments":[],"parameters":[{"name":"tr_id","value":"'d4bec695-a9de-40c6-a2f3-b26def23cf8d'"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true}],"attachments":[{"uid":"ba8d1c0a585af586","name":"Location","source":"ba8d1c0a585af586.uri","type":"text/uri-list","size":86},{"uid":"500338306373f3ec","name":"Screenshot","source":"500338306373f3ec.png","type":"image/png","size":125444},{"uid":"8a3feedca42b7e8b","name":"log","source":"8a3feedca42b7e8b.txt","type":"text/plain","size":1179}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":23,"attachmentsCount":3,"hasContent":true},"afterStages":[{"name":"context::0","time":{"start":1728148684097,"stop":1728148684164,"duration":67},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"suite","value":"Deal Actions"},{"name":"parentSuite","value":"tests.deals"},{"name":"subSuite","value":"TestDealActions"},{"name":"host","value":"fv-az1052-613"},{"name":"thread","value":"5486-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.deals.test_deal_actions"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"a0a947a4f5643aae.json","parameterValues":[]}