{"uid":"8577d87c7a7ec2f7","name":"Delete connected exchange","fullName":"tests.credentials.test_connect_exchange.TestConnectExchange#test_delete_exchange","historyId":"304d906a2416c2f46499210d51235011","time":{"start":1726945012780,"stop":1726945015322,"duration":2542},"descriptionHtml":"<h4 style=\"margin: -10px 0 5px;\"><span style=\"margin: 9px 4px 9px 0; cursor: pointer\" class=\"fa fa-files-o\" data-copy=\"test_delete_exchange[HitBTC]\"></span>test_delete_exchange[HitBTC]</h4>\n    Collected at <span class=\"label label_status_passed\">2024-09-21 18:54</span><br><br>","status":"broken","statusMessage":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://dev.api.darkbot.io/auth/login","statusTrace":"self = <credentials.test_connect_exchange.TestConnectExchange object at 0x7f726fccad20>\npage = <Page url='https://darkbot:98713456@dev.app.darkbot.io/'>\ncreate_session = <function create_session.<locals>._create_session at 0x7f726d00a3e0>\nexchange = 'HitBTC'\n\n    @allure.title(\"Delete connected exchange\")\n    @pytest.mark.parametrize(**CredentialsParams.ddt_exchange_value)\n    def test_delete_exchange(self, page: Page, create_session, exchange):\n        login_page = LoginPage(page)\n        credentials_page = CredentialsPage(page)\n        credential_details_page = CredentialDetailsPage(page)\n        danger_zone = DangerZone(page)\n        notifications = Notifications(page)\n    \n        toast_message = \\\n            \"Request to delete credentials was successfully created. PLease wait until system will delete it completely\"\n    \n        with allure.step(\"Test preparation\"):\n            login_page.goto()\n>           create_session()\n\ncreate_session = <function create_session.<locals>._create_session at 0x7f726d00a3e0>\ncredential_details_page = <src.pages.credential_details_page.credential_details_page.CredentialDetailsPage object at 0x7f726d042870>\ncredentials_page = <src.pages.credentials_page.credentials_page.CredentialsPage object at 0x7f726d041580>\ndanger_zone = <src.pages.danger_zone.DangerZone object at 0x7f726d041d90>\nexchange   = 'HitBTC'\nlogin_page = <src.pages.login_page.login_page.LoginPage object at 0x7f726d0427b0>\nnotifications = <src.pages.notifications.Notifications object at 0x7f726d0435c0>\npage       = <Page url='https://darkbot:98713456@dev.app.darkbot.io/'>\nself       = <credentials.test_connect_exchange.TestConnectExchange object at 0x7f726fccad20>\ntoast_message = 'Request to delete credentials was successfully created. PLease wait until system will delete it completely'\n\ntests/credentials/test_connect_exchange.py:79: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nconftest.py:132: in _create_session\n    localStorage.setItem('token', '{prepare_user_session(auth_data=auth_data)}');\n        auth_data  = {'password': 'darkbot123', 'token': 'token', 'username': 'premium@darkbot.io'}\n        page       = <Page url='https://darkbot:98713456@dev.app.darkbot.io/'>\n        prepare_user_session = <function prepare_user_session at 0x7f726cdf65c0>\nmodules/Utils.py:56: in prepare_user_session\n    res = AuthApi(auth_data=auth_data)\n        auth_data  = {'password': 'darkbot123', 'token': 'token', 'username': 'premium@darkbot.io'}\nsrc/api/base_api.py:22: in __init__\n    self._login(auth_data)\n        auth_data  = {'password': 'darkbot123', 'token': 'token', 'username': 'premium@darkbot.io'}\n        jwt_token  = None\n        lang       = 'en'\n        self       = <src.api.auth.register_api.AuthApi object at 0x7f726cd82690>\nsrc/api/base_api.py:30: in _login\n    raise e\n        auth_data  = {'password': 'darkbot123', 'token': 'token', 'username': 'premium@darkbot.io'}\n        response   = <Response [401]>\n        self       = <src.api.auth.register_api.AuthApi object at 0x7f726cd82690>\nsrc/api/base_api.py:27: in _login\n    response.raise_for_status()\n        auth_data  = {'password': 'darkbot123', 'token': 'token', 'username': 'premium@darkbot.io'}\n        response   = <Response [401]>\n        self       = <src.api.auth.register_api.AuthApi object at 0x7f726cd82690>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [401]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://dev.api.darkbot.io/auth/login\n\nhttp_error_msg = '401 Client Error: Unauthorized for url: https://dev.api.darkbot.io/auth/login'\nreason     = 'Unauthorized'\nself       = <Response [401]>\n\n/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/requests/models.py:1021: HTTPError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"context","time":{"start":1726945012585,"stop":1726945012741,"duration":156},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"page","time":{"start":1726945012741,"stop":1726945012778,"duration":37},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"create_session","time":{"start":1726945012779,"stop":1726945012779,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"descriptionHtml":"<h4 style=\"margin: -10px 0 5px;\"><span style=\"margin: 9px 4px 9px 0; cursor: pointer\" class=\"fa fa-files-o\" data-copy=\"test_delete_exchange[HitBTC]\"></span>test_delete_exchange[HitBTC]</h4>\n    Collected at <span class=\"label label_status_passed\">2024-09-21 18:54</span><br><br>","status":"broken","statusMessage":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://dev.api.darkbot.io/auth/login","statusTrace":"self = <credentials.test_connect_exchange.TestConnectExchange object at 0x7f726fccad20>\npage = <Page url='https://darkbot:98713456@dev.app.darkbot.io/'>\ncreate_session = <function create_session.<locals>._create_session at 0x7f726d00a3e0>\nexchange = 'HitBTC'\n\n    @allure.title(\"Delete connected exchange\")\n    @pytest.mark.parametrize(**CredentialsParams.ddt_exchange_value)\n    def test_delete_exchange(self, page: Page, create_session, exchange):\n        login_page = LoginPage(page)\n        credentials_page = CredentialsPage(page)\n        credential_details_page = CredentialDetailsPage(page)\n        danger_zone = DangerZone(page)\n        notifications = Notifications(page)\n    \n        toast_message = \\\n            \"Request to delete credentials was successfully created. PLease wait until system will delete it completely\"\n    \n        with allure.step(\"Test preparation\"):\n            login_page.goto()\n>           create_session()\n\ncreate_session = <function create_session.<locals>._create_session at 0x7f726d00a3e0>\ncredential_details_page = <src.pages.credential_details_page.credential_details_page.CredentialDetailsPage object at 0x7f726d042870>\ncredentials_page = <src.pages.credentials_page.credentials_page.CredentialsPage object at 0x7f726d041580>\ndanger_zone = <src.pages.danger_zone.DangerZone object at 0x7f726d041d90>\nexchange   = 'HitBTC'\nlogin_page = <src.pages.login_page.login_page.LoginPage object at 0x7f726d0427b0>\nnotifications = <src.pages.notifications.Notifications object at 0x7f726d0435c0>\npage       = <Page url='https://darkbot:98713456@dev.app.darkbot.io/'>\nself       = <credentials.test_connect_exchange.TestConnectExchange object at 0x7f726fccad20>\ntoast_message = 'Request to delete credentials was successfully created. PLease wait until system will delete it completely'\n\ntests/credentials/test_connect_exchange.py:79: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nconftest.py:132: in _create_session\n    localStorage.setItem('token', '{prepare_user_session(auth_data=auth_data)}');\n        auth_data  = {'password': 'darkbot123', 'token': 'token', 'username': 'premium@darkbot.io'}\n        page       = <Page url='https://darkbot:98713456@dev.app.darkbot.io/'>\n        prepare_user_session = <function prepare_user_session at 0x7f726cdf65c0>\nmodules/Utils.py:56: in prepare_user_session\n    res = AuthApi(auth_data=auth_data)\n        auth_data  = {'password': 'darkbot123', 'token': 'token', 'username': 'premium@darkbot.io'}\nsrc/api/base_api.py:22: in __init__\n    self._login(auth_data)\n        auth_data  = {'password': 'darkbot123', 'token': 'token', 'username': 'premium@darkbot.io'}\n        jwt_token  = None\n        lang       = 'en'\n        self       = <src.api.auth.register_api.AuthApi object at 0x7f726cd82690>\nsrc/api/base_api.py:30: in _login\n    raise e\n        auth_data  = {'password': 'darkbot123', 'token': 'token', 'username': 'premium@darkbot.io'}\n        response   = <Response [401]>\n        self       = <src.api.auth.register_api.AuthApi object at 0x7f726cd82690>\nsrc/api/base_api.py:27: in _login\n    response.raise_for_status()\n        auth_data  = {'password': 'darkbot123', 'token': 'token', 'username': 'premium@darkbot.io'}\n        response   = <Response [401]>\n        self       = <src.api.auth.register_api.AuthApi object at 0x7f726cd82690>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [401]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://dev.api.darkbot.io/auth/login\n\nhttp_error_msg = '401 Client Error: Unauthorized for url: https://dev.api.darkbot.io/auth/login'\nreason     = 'Unauthorized'\nself       = <Response [401]>\n\n/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/requests/models.py:1021: HTTPError","steps":[{"name":"Test preparation","time":{"start":1726945012780,"stop":1726945015321,"duration":2541},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://dev.api.darkbot.io/auth/login\n","statusTrace":"  File \"/home/runner/work/qa-website/qa-website/tests/credentials/test_connect_exchange.py\", line 79, in test_delete_exchange\n    create_session()\n  File \"/home/runner/work/qa-website/qa-website/conftest.py\", line 132, in _create_session\n    localStorage.setItem('token', '{prepare_user_session(auth_data=auth_data)}');\n                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/qa-website/qa-website/modules/Utils.py\", line 56, in prepare_user_session\n    res = AuthApi(auth_data=auth_data)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/qa-website/qa-website/src/api/base_api.py\", line 22, in __init__\n    self._login(auth_data)\n  File \"/home/runner/work/qa-website/qa-website/src/api/base_api.py\", line 30, in _login\n    raise e\n  File \"/home/runner/work/qa-website/qa-website/src/api/base_api.py\", line 27, in _login\n    response.raise_for_status()\n  File \"/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/requests/models.py\", line 1021, in raise_for_status\n    raise HTTPError(http_error_msg, response=self)\n","steps":[{"name":"goto route","time":{"start":1726945012780,"stop":1726945014619,"duration":1839},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true}],"attachments":[{"uid":"eecf332310775d52","name":"Location","source":"eecf332310775d52.uri","type":"text/uri-list","size":44},{"uid":"572dc706e13b1733","name":"Screenshot","source":"572dc706e13b1733.png","type":"image/png","size":175928},{"uid":"5f4e0f89069c9f90","name":"log","source":"5f4e0f89069c9f90.txt","type":"text/plain","size":233}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":3,"hasContent":true},"afterStages":[{"name":"context::0","time":{"start":1726945015564,"stop":1726945015628,"duration":64},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"suite","value":"Connect exchange"},{"name":"parentSuite","value":"tests.credentials"},{"name":"subSuite","value":"TestConnectExchange"},{"name":"host","value":"fv-az1521-508"},{"name":"thread","value":"5413-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.credentials.test_connect_exchange"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"exchange","value":"'HitBTC'"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"8577d87c7a7ec2f7.json","parameterValues":["'HitBTC'"]}