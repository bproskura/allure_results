{"uid":"8ad25198e1189c61","name":"Verify the referral addition","fullName":"tests.refferals.test_register_referral.TestRegisterReferral#test_verify_referer_referral","historyId":"4930c037b0ed9037cbb58aa6db5cbd15","time":{"start":1726943382244,"stop":1726943384481,"duration":2237},"descriptionHtml":"<h4 style=\"margin: -10px 0 5px;\"><span style=\"margin: 9px 4px 9px 0; cursor: pointer\" class=\"fa fa-files-o\" data-copy=\"test_verify_referer_referral\"></span>test_verify_referer_referral</h4>\n    Collected at <span class=\"label label_status_passed\">2024-09-21 18:21</span><br><br>","status":"broken","statusMessage":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://dev.api.darkbot.io/auth/login","statusTrace":"self = <refferals.test_register_referral.TestRegisterReferral object at 0x7f1cd0ebd880>\npage = <Page url='https://darkbot:98713456@dev.app.darkbot.io/'>\ncreate_session = <function create_session.<locals>._create_session at 0x7f1cbd80cae0>\n\n    @allure.title(\"Verify the referral addition\")\n    def test_verify_referer_referral(self, page: Page, create_session):\n        login_page = LoginPage(page)\n        profile_settings_page = ProfileSettingsPage(page)\n        dashboard_page = DashboardPage(page)\n    \n        with allure.step(\"Test preparation\"):\n            login_page.goto()\n>           create_session()\n\ncreate_session = <function create_session.<locals>._create_session at 0x7f1cbd80cae0>\ndashboard_page = <src.pages.dashboard_page.dashboard_page.DashboardPage object at 0x7f1cbd8c7fb0>\nlogin_page = <src.pages.login_page.login_page.LoginPage object at 0x7f1cbd8c7e90>\npage       = <Page url='https://darkbot:98713456@dev.app.darkbot.io/'>\nprofile_settings_page = <src.pages.profile_settings_page.profile_settings_page.ProfileSettingsPage object at 0x7f1cbd8c7a10>\nself       = <refferals.test_register_referral.TestRegisterReferral object at 0x7f1cd0ebd880>\n\ntests/refferals/test_register_referral.py:51: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nconftest.py:135: in _create_session\n    localStorage.setItem('token', '{prepare_user_session(auth_data=auth_data)}');\n        auth_data  = {'password': 'darkbot123', 'token': 'token', 'username': 'premium@darkbot.io'}\n        page       = <Page url='https://darkbot:98713456@dev.app.darkbot.io/'>\n        prepare_user_session = <function prepare_user_session at 0x7f1cc712d760>\nmodules/Utils.py:56: in prepare_user_session\n    res = AuthApi(auth_data=auth_data)\n        auth_data  = {'password': 'darkbot123', 'token': 'token', 'username': 'premium@darkbot.io'}\nsrc/api/base_api.py:22: in __init__\n    self._login(auth_data)\n        auth_data  = {'password': 'darkbot123', 'token': 'token', 'username': 'premium@darkbot.io'}\n        jwt_token  = None\n        lang       = 'en'\n        self       = <src.api.auth.register_api.AuthApi object at 0x7f1cbd906120>\nsrc/api/base_api.py:30: in _login\n    raise e\n        auth_data  = {'password': 'darkbot123', 'token': 'token', 'username': 'premium@darkbot.io'}\n        response   = <Response [401]>\n        self       = <src.api.auth.register_api.AuthApi object at 0x7f1cbd906120>\nsrc/api/base_api.py:27: in _login\n    response.raise_for_status()\n        auth_data  = {'password': 'darkbot123', 'token': 'token', 'username': 'premium@darkbot.io'}\n        response   = <Response [401]>\n        self       = <src.api.auth.register_api.AuthApi object at 0x7f1cbd906120>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [401]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://dev.api.darkbot.io/auth/login\n\nhttp_error_msg = '401 Client Error: Unauthorized for url: https://dev.api.darkbot.io/auth/login'\nreason     = 'Unauthorized'\nself       = <Response [401]>\n\n/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/requests/models.py:1021: HTTPError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"context","time":{"start":1726943382045,"stop":1726943382206,"duration":161},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"page","time":{"start":1726943382206,"stop":1726943382243,"duration":37},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"create_session","time":{"start":1726943382243,"stop":1726943382243,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"descriptionHtml":"<h4 style=\"margin: -10px 0 5px;\"><span style=\"margin: 9px 4px 9px 0; cursor: pointer\" class=\"fa fa-files-o\" data-copy=\"test_verify_referer_referral\"></span>test_verify_referer_referral</h4>\n    Collected at <span class=\"label label_status_passed\">2024-09-21 18:21</span><br><br>","status":"broken","statusMessage":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://dev.api.darkbot.io/auth/login","statusTrace":"self = <refferals.test_register_referral.TestRegisterReferral object at 0x7f1cd0ebd880>\npage = <Page url='https://darkbot:98713456@dev.app.darkbot.io/'>\ncreate_session = <function create_session.<locals>._create_session at 0x7f1cbd80cae0>\n\n    @allure.title(\"Verify the referral addition\")\n    def test_verify_referer_referral(self, page: Page, create_session):\n        login_page = LoginPage(page)\n        profile_settings_page = ProfileSettingsPage(page)\n        dashboard_page = DashboardPage(page)\n    \n        with allure.step(\"Test preparation\"):\n            login_page.goto()\n>           create_session()\n\ncreate_session = <function create_session.<locals>._create_session at 0x7f1cbd80cae0>\ndashboard_page = <src.pages.dashboard_page.dashboard_page.DashboardPage object at 0x7f1cbd8c7fb0>\nlogin_page = <src.pages.login_page.login_page.LoginPage object at 0x7f1cbd8c7e90>\npage       = <Page url='https://darkbot:98713456@dev.app.darkbot.io/'>\nprofile_settings_page = <src.pages.profile_settings_page.profile_settings_page.ProfileSettingsPage object at 0x7f1cbd8c7a10>\nself       = <refferals.test_register_referral.TestRegisterReferral object at 0x7f1cd0ebd880>\n\ntests/refferals/test_register_referral.py:51: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nconftest.py:135: in _create_session\n    localStorage.setItem('token', '{prepare_user_session(auth_data=auth_data)}');\n        auth_data  = {'password': 'darkbot123', 'token': 'token', 'username': 'premium@darkbot.io'}\n        page       = <Page url='https://darkbot:98713456@dev.app.darkbot.io/'>\n        prepare_user_session = <function prepare_user_session at 0x7f1cc712d760>\nmodules/Utils.py:56: in prepare_user_session\n    res = AuthApi(auth_data=auth_data)\n        auth_data  = {'password': 'darkbot123', 'token': 'token', 'username': 'premium@darkbot.io'}\nsrc/api/base_api.py:22: in __init__\n    self._login(auth_data)\n        auth_data  = {'password': 'darkbot123', 'token': 'token', 'username': 'premium@darkbot.io'}\n        jwt_token  = None\n        lang       = 'en'\n        self       = <src.api.auth.register_api.AuthApi object at 0x7f1cbd906120>\nsrc/api/base_api.py:30: in _login\n    raise e\n        auth_data  = {'password': 'darkbot123', 'token': 'token', 'username': 'premium@darkbot.io'}\n        response   = <Response [401]>\n        self       = <src.api.auth.register_api.AuthApi object at 0x7f1cbd906120>\nsrc/api/base_api.py:27: in _login\n    response.raise_for_status()\n        auth_data  = {'password': 'darkbot123', 'token': 'token', 'username': 'premium@darkbot.io'}\n        response   = <Response [401]>\n        self       = <src.api.auth.register_api.AuthApi object at 0x7f1cbd906120>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [401]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://dev.api.darkbot.io/auth/login\n\nhttp_error_msg = '401 Client Error: Unauthorized for url: https://dev.api.darkbot.io/auth/login'\nreason     = 'Unauthorized'\nself       = <Response [401]>\n\n/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/requests/models.py:1021: HTTPError","steps":[{"name":"Test preparation","time":{"start":1726943382244,"stop":1726943384480,"duration":2236},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://dev.api.darkbot.io/auth/login\n","statusTrace":"  File \"/home/runner/work/qa-website/qa-website/tests/refferals/test_register_referral.py\", line 51, in test_verify_referer_referral\n    create_session()\n  File \"/home/runner/work/qa-website/qa-website/conftest.py\", line 135, in _create_session\n    localStorage.setItem('token', '{prepare_user_session(auth_data=auth_data)}');\n                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/qa-website/qa-website/modules/Utils.py\", line 56, in prepare_user_session\n    res = AuthApi(auth_data=auth_data)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/qa-website/qa-website/src/api/base_api.py\", line 22, in __init__\n    self._login(auth_data)\n  File \"/home/runner/work/qa-website/qa-website/src/api/base_api.py\", line 30, in _login\n    raise e\n  File \"/home/runner/work/qa-website/qa-website/src/api/base_api.py\", line 27, in _login\n    response.raise_for_status()\n  File \"/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/requests/models.py\", line 1021, in raise_for_status\n    raise HTTPError(http_error_msg, response=self)\n","steps":[{"name":"goto route","time":{"start":1726943382244,"stop":1726943383672,"duration":1428},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true}],"attachments":[{"uid":"d002c849b9d6fcbc","name":"Location","source":"d002c849b9d6fcbc.uri","type":"text/uri-list","size":44},{"uid":"cde8cb9c5de42750","name":"Screenshot","source":"cde8cb9c5de42750.png","type":"image/png","size":175928}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":2,"hasContent":true},"afterStages":[{"name":"context::0","time":{"start":1726943384636,"stop":1726943384700,"duration":64},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"suite","value":"Create bot"},{"name":"parentSuite","value":"tests.refferals"},{"name":"subSuite","value":"TestRegisterReferral"},{"name":"host","value":"fv-az1764-519"},{"name":"thread","value":"5447-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.refferals.test_register_referral"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"c2d9f23ecbc8564e","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://dev.api.darkbot.io/auth/login","time":{"start":1726943378844,"stop":1726943381818,"duration":2974}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"8ad25198e1189c61.json","parameterValues":[]}