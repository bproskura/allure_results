{"uid":"c7be27c065ecd587","name":"Delete connected exchange","fullName":"tests.credentials.test_connect_exchange.TestConnectExchange#test_delete_exchange","historyId":"6485bcf1efd15c2c4b77dc1265f6e7a5","time":{"start":1722971400462,"stop":1722971402014,"duration":1552},"descriptionHtml":"<h4 style=\"margin: -10px 0 5px;\"><span style=\"margin: 9px 4px 9px 0; cursor: pointer\" class=\"fa fa-files-o\" data-copy=\"test_delete_exchange[Poloniex]\"></span>test_delete_exchange[Poloniex]</h4>\n    Collected at <span class=\"label label_status_passed\">2024-08-06 19:08</span><br><br>","status":"broken","statusMessage":"TypeError: unsupported operand type(s) for +: 'NoneType' and 'str'","statusTrace":"self = <credentials.test_connect_exchange.TestConnectExchange object at 0x7f53dabc3470>\npage = <Page url='https://darkbot:98713456@dev.app.darkbot.io/'>\ncreate_session = <function create_session.<locals>._create_session at 0x7f53c695fe20>\nexchange = 'Poloniex'\n\n    @allure.title(\"Delete connected exchange\")\n    @pytest.mark.parametrize(**CredentialsParams.ddt_exchange_value)\n    def test_delete_exchange(self, page: Page, create_session, exchange):\n        login_page = LoginPage(page)\n        credentials_page = CredentialsPage(page)\n        credential_details_page = CredentialDetailsPage(page)\n        danger_zone = DangerZone(page)\n        notifications = Notifications(page)\n    \n        toast_message = \\\n            \"Request to delete credentials was successfully created. PLease wait until system will delete it completely\"\n    \n        with allure.step(\"Test preparation\"):\n            login_page.goto()\n>           create_session()\n\ncreate_session = <function create_session.<locals>._create_session at 0x7f53c695fe20>\ncredential_details_page = <src.pages.credential_details_page.credential_details_page.CredentialDetailsPage object at 0x7f53c69db200>\ncredentials_page = <src.pages.credentials_page.credentials_page.CredentialsPage object at 0x7f53c69d8830>\ndanger_zone = <src.pages.danger_zone.DangerZone object at 0x7f53c69d9a60>\nexchange   = 'Poloniex'\nlogin_page = <src.pages.login_page.login_page.LoginPage object at 0x7f53c69da720>\nnotifications = <src.pages.notifications.Notifications object at 0x7f53c69dbe30>\npage       = <Page url='https://darkbot:98713456@dev.app.darkbot.io/'>\nself       = <credentials.test_connect_exchange.TestConnectExchange object at 0x7f53dabc3470>\ntoast_message = 'Request to delete credentials was successfully created. PLease wait until system will delete it completely'\n\ntests/credentials/test_connect_exchange.py:79: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nconftest.py:134: in _create_session\n    localStorage.setItem('token', '{prepare_user_session(auth_data=auth_data)}');\n        auth_data  = {'password': 'darkbot123', 'token': 'token', 'username': 'premium@darkbot.io'}\n        page       = <Page url='https://darkbot:98713456@dev.app.darkbot.io/'>\n        prepare_user_session = <function prepare_user_session at 0x7f53c6ad1e40>\nmodules/Utils.py:56: in prepare_user_session\n    res = AuthApi(auth_data=auth_data)\n        auth_data  = {'password': 'darkbot123', 'token': 'token', 'username': 'premium@darkbot.io'}\nsrc/api/base_api.py:22: in __init__\n    self._login(auth_data)\n        auth_data  = {'password': 'darkbot123', 'token': 'token', 'username': 'premium@darkbot.io'}\n        jwt_token  = None\n        lang       = 'en'\n        self       = <src.api.auth.register_api.AuthApi object at 0x7f53c69daf90>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <src.api.auth.register_api.AuthApi object at 0x7f53c69daf90>\nauth_data = {'password': 'darkbot123', 'token': 'token', 'username': 'premium@darkbot.io'}\n\n    def _login(self, auth_data: dict):\n>       response = self.s.post(self.BASE_URL + Auth.login, json=auth_data, verify=certifi.where())\nE       TypeError: unsupported operand type(s) for +: 'NoneType' and 'str'\n\nauth_data  = {'password': 'darkbot123', 'token': 'token', 'username': 'premium@darkbot.io'}\nself       = <src.api.auth.register_api.AuthApi object at 0x7f53c69daf90>\n\nsrc/api/base_api.py:25: TypeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"context","time":{"start":1722971400199,"stop":1722971400414,"duration":215},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"page","time":{"start":1722971400415,"stop":1722971400461,"duration":46},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"create_session","time":{"start":1722971400461,"stop":1722971400461,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"descriptionHtml":"<h4 style=\"margin: -10px 0 5px;\"><span style=\"margin: 9px 4px 9px 0; cursor: pointer\" class=\"fa fa-files-o\" data-copy=\"test_delete_exchange[Poloniex]\"></span>test_delete_exchange[Poloniex]</h4>\n    Collected at <span class=\"label label_status_passed\">2024-08-06 19:08</span><br><br>","status":"broken","statusMessage":"TypeError: unsupported operand type(s) for +: 'NoneType' and 'str'","statusTrace":"self = <credentials.test_connect_exchange.TestConnectExchange object at 0x7f53dabc3470>\npage = <Page url='https://darkbot:98713456@dev.app.darkbot.io/'>\ncreate_session = <function create_session.<locals>._create_session at 0x7f53c695fe20>\nexchange = 'Poloniex'\n\n    @allure.title(\"Delete connected exchange\")\n    @pytest.mark.parametrize(**CredentialsParams.ddt_exchange_value)\n    def test_delete_exchange(self, page: Page, create_session, exchange):\n        login_page = LoginPage(page)\n        credentials_page = CredentialsPage(page)\n        credential_details_page = CredentialDetailsPage(page)\n        danger_zone = DangerZone(page)\n        notifications = Notifications(page)\n    \n        toast_message = \\\n            \"Request to delete credentials was successfully created. PLease wait until system will delete it completely\"\n    \n        with allure.step(\"Test preparation\"):\n            login_page.goto()\n>           create_session()\n\ncreate_session = <function create_session.<locals>._create_session at 0x7f53c695fe20>\ncredential_details_page = <src.pages.credential_details_page.credential_details_page.CredentialDetailsPage object at 0x7f53c69db200>\ncredentials_page = <src.pages.credentials_page.credentials_page.CredentialsPage object at 0x7f53c69d8830>\ndanger_zone = <src.pages.danger_zone.DangerZone object at 0x7f53c69d9a60>\nexchange   = 'Poloniex'\nlogin_page = <src.pages.login_page.login_page.LoginPage object at 0x7f53c69da720>\nnotifications = <src.pages.notifications.Notifications object at 0x7f53c69dbe30>\npage       = <Page url='https://darkbot:98713456@dev.app.darkbot.io/'>\nself       = <credentials.test_connect_exchange.TestConnectExchange object at 0x7f53dabc3470>\ntoast_message = 'Request to delete credentials was successfully created. PLease wait until system will delete it completely'\n\ntests/credentials/test_connect_exchange.py:79: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nconftest.py:134: in _create_session\n    localStorage.setItem('token', '{prepare_user_session(auth_data=auth_data)}');\n        auth_data  = {'password': 'darkbot123', 'token': 'token', 'username': 'premium@darkbot.io'}\n        page       = <Page url='https://darkbot:98713456@dev.app.darkbot.io/'>\n        prepare_user_session = <function prepare_user_session at 0x7f53c6ad1e40>\nmodules/Utils.py:56: in prepare_user_session\n    res = AuthApi(auth_data=auth_data)\n        auth_data  = {'password': 'darkbot123', 'token': 'token', 'username': 'premium@darkbot.io'}\nsrc/api/base_api.py:22: in __init__\n    self._login(auth_data)\n        auth_data  = {'password': 'darkbot123', 'token': 'token', 'username': 'premium@darkbot.io'}\n        jwt_token  = None\n        lang       = 'en'\n        self       = <src.api.auth.register_api.AuthApi object at 0x7f53c69daf90>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <src.api.auth.register_api.AuthApi object at 0x7f53c69daf90>\nauth_data = {'password': 'darkbot123', 'token': 'token', 'username': 'premium@darkbot.io'}\n\n    def _login(self, auth_data: dict):\n>       response = self.s.post(self.BASE_URL + Auth.login, json=auth_data, verify=certifi.where())\nE       TypeError: unsupported operand type(s) for +: 'NoneType' and 'str'\n\nauth_data  = {'password': 'darkbot123', 'token': 'token', 'username': 'premium@darkbot.io'}\nself       = <src.api.auth.register_api.AuthApi object at 0x7f53c69daf90>\n\nsrc/api/base_api.py:25: TypeError","steps":[{"name":"Test preparation","time":{"start":1722971400462,"stop":1722971402013,"duration":1551},"status":"broken","statusMessage":"TypeError: unsupported operand type(s) for +: 'NoneType' and 'str'\n","statusTrace":"  File \"/home/runner/work/qa-website/qa-website/tests/credentials/test_connect_exchange.py\", line 79, in test_delete_exchange\n    create_session()\n  File \"/home/runner/work/qa-website/qa-website/conftest.py\", line 134, in _create_session\n    localStorage.setItem('token', '{prepare_user_session(auth_data=auth_data)}');\n                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/qa-website/qa-website/modules/Utils.py\", line 56, in prepare_user_session\n    res = AuthApi(auth_data=auth_data)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/qa-website/qa-website/src/api/base_api.py\", line 22, in __init__\n    self._login(auth_data)\n  File \"/home/runner/work/qa-website/qa-website/src/api/base_api.py\", line 25, in _login\n    response = self.s.post(self.BASE_URL + Auth.login, json=auth_data, verify=certifi.where())\n                           ~~~~~~~~~~~~~~^~~~~~~~~~~~\n","steps":[{"name":"goto ''","time":{"start":1722971400462,"stop":1722971402013,"duration":1551},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"base_url","value":"'https://darkbot:98713456@dev.app.darkbot.io/'"},{"name":"endpoint","value":"''"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"5c31ed4f309106b7","name":"Location","source":"5c31ed4f309106b7.uri","type":"text/uri-list","size":44},{"uid":"3dad7b2bb3d900da","name":"Screenshot","source":"3dad7b2bb3d900da.png","type":"image/png","size":175792}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"context::0","time":{"start":1722971402883,"stop":1722971402993,"duration":110},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"suite","value":"Connect exchange"},{"name":"parentSuite","value":"tests.credentials"},{"name":"subSuite","value":"TestConnectExchange"},{"name":"host","value":"fv-az1149-304"},{"name":"thread","value":"5417-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.credentials.test_connect_exchange"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"exchange","value":"'Poloniex'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"a5df75fd7df1492a","status":"broken","statusDetails":"TypeError: unsupported operand type(s) for +: 'NoneType' and 'str'","time":{"start":1722971397551,"stop":1722971399085,"duration":1534}},{"uid":"ba87213655ab2f13","status":"broken","statusDetails":"TypeError: unsupported operand type(s) for +: 'NoneType' and 'str'","time":{"start":1722971394878,"stop":1722971396381,"duration":1503}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"c7be27c065ecd587.json","parameterValues":["'Poloniex'"]}