{"uid":"da07d3763c0d7a8f","name":"Authorization with invalid credentials","fullName":"tests.auth.test_login.TestLogin#test_login_with_invalid_credentials","historyId":"5ae45baece9db42ba3b3d04d700b4cba","time":{"start":1726944930702,"stop":1726944935203,"duration":4501},"descriptionHtml":"<h4 style=\"margin: -10px 0 5px;\"><span style=\"margin: 9px 4px 9px 0; cursor: pointer\" class=\"fa fa-files-o\" data-copy=\"test_login_with_invalid_credentials[password]\"></span>test_login_with_invalid_credentials[password]</h4>\n    Collected at <span class=\"label label_status_passed\">2024-09-21 18:54</span><br><br>","status":"failed","statusMessage":"AssertionError: assert 'Invalid credentials.' in '×Too many failed login attempts, please try again in 7 minutes.'\n +  where '×Too many failed login attempts, please try again in 7 minutes.' = get_alert_message()\n +    where get_alert_message = <src.pages.login_page.login_page.LoginPage object at 0x7f726fbbee40>.get_alert_message","statusTrace":"self = <auth.test_login.TestLogin object at 0x7f7270821250>\npage = <Page url='https://darkbot:98713456@dev.app.darkbot.io/'>\nfake = <modules.Faker.Fake object at 0x7f7271122a20>, login_value = 'password'\n\n    @allure.title(\"Authorization with invalid credentials\")\n    @pytest.mark.parametrize(**AuthParams.ddt_login_value)\n    def test_login_with_invalid_credentials(self, page: Page, fake, login_value):\n        login_page = LoginPage(page)\n        alert_msg = \"Invalid credentials.\"\n    \n        with allure.step(\"Test preparation\"):\n            login_page.goto()\n    \n        if login_value == \"password\":\n            with allure.step(\"Enter login data with invalid password\"):\n                login_page.insert_email(cfg.PREMIUM_USER.get(\"username\"))\n                login_page.insert_password(fake.password)\n    \n        else:\n            with allure.step(\"Enter login data with invalid email\"):\n                login_page.insert_email(fake.email)\n                login_page.insert_password(cfg.PREMIUM_USER.get(\"password\"))\n    \n        with allure.step(\"Click on Sign in btn\"):\n            login_page.click_sing_in_btn()\n    \n        with allure.step(\"Verify invalid credentials alert\"):\n            assert login_page.wait_for_alert() is True\n>           assert alert_msg in login_page.get_alert_message()\nE           AssertionError: assert 'Invalid credentials.' in '×Too many failed login attempts, please try again in 7 minutes.'\nE            +  where '×Too many failed login attempts, please try again in 7 minutes.' = get_alert_message()\nE            +    where get_alert_message = <src.pages.login_page.login_page.LoginPage object at 0x7f726fbbee40>.get_alert_message\n\nalert_msg  = 'Invalid credentials.'\nfake       = <modules.Faker.Fake object at 0x7f7271122a20>\nlogin_page = <src.pages.login_page.login_page.LoginPage object at 0x7f726fbbee40>\nlogin_value = 'password'\npage       = <Page url='https://darkbot:98713456@dev.app.darkbot.io/'>\nself       = <auth.test_login.TestLogin object at 0x7f7270821250>\n\ntests/auth/test_login.py:71: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"context","time":{"start":1726944930451,"stop":1726944930646,"duration":195},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"page","time":{"start":1726944930646,"stop":1726944930702,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"descriptionHtml":"<h4 style=\"margin: -10px 0 5px;\"><span style=\"margin: 9px 4px 9px 0; cursor: pointer\" class=\"fa fa-files-o\" data-copy=\"test_login_with_invalid_credentials[password]\"></span>test_login_with_invalid_credentials[password]</h4>\n    Collected at <span class=\"label label_status_passed\">2024-09-21 18:54</span><br><br>","status":"failed","statusMessage":"AssertionError: assert 'Invalid credentials.' in '×Too many failed login attempts, please try again in 7 minutes.'\n +  where '×Too many failed login attempts, please try again in 7 minutes.' = get_alert_message()\n +    where get_alert_message = <src.pages.login_page.login_page.LoginPage object at 0x7f726fbbee40>.get_alert_message","statusTrace":"self = <auth.test_login.TestLogin object at 0x7f7270821250>\npage = <Page url='https://darkbot:98713456@dev.app.darkbot.io/'>\nfake = <modules.Faker.Fake object at 0x7f7271122a20>, login_value = 'password'\n\n    @allure.title(\"Authorization with invalid credentials\")\n    @pytest.mark.parametrize(**AuthParams.ddt_login_value)\n    def test_login_with_invalid_credentials(self, page: Page, fake, login_value):\n        login_page = LoginPage(page)\n        alert_msg = \"Invalid credentials.\"\n    \n        with allure.step(\"Test preparation\"):\n            login_page.goto()\n    \n        if login_value == \"password\":\n            with allure.step(\"Enter login data with invalid password\"):\n                login_page.insert_email(cfg.PREMIUM_USER.get(\"username\"))\n                login_page.insert_password(fake.password)\n    \n        else:\n            with allure.step(\"Enter login data with invalid email\"):\n                login_page.insert_email(fake.email)\n                login_page.insert_password(cfg.PREMIUM_USER.get(\"password\"))\n    \n        with allure.step(\"Click on Sign in btn\"):\n            login_page.click_sing_in_btn()\n    \n        with allure.step(\"Verify invalid credentials alert\"):\n            assert login_page.wait_for_alert() is True\n>           assert alert_msg in login_page.get_alert_message()\nE           AssertionError: assert 'Invalid credentials.' in '×Too many failed login attempts, please try again in 7 minutes.'\nE            +  where '×Too many failed login attempts, please try again in 7 minutes.' = get_alert_message()\nE            +    where get_alert_message = <src.pages.login_page.login_page.LoginPage object at 0x7f726fbbee40>.get_alert_message\n\nalert_msg  = 'Invalid credentials.'\nfake       = <modules.Faker.Fake object at 0x7f7271122a20>\nlogin_page = <src.pages.login_page.login_page.LoginPage object at 0x7f726fbbee40>\nlogin_value = 'password'\npage       = <Page url='https://darkbot:98713456@dev.app.darkbot.io/'>\nself       = <auth.test_login.TestLogin object at 0x7f7270821250>\n\ntests/auth/test_login.py:71: AssertionError","steps":[{"name":"Test preparation","time":{"start":1726944930703,"stop":1726944932581,"duration":1878},"status":"passed","steps":[{"name":"goto route","time":{"start":1726944930703,"stop":1726944932581,"duration":1878},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true},{"name":"Enter login data with invalid password","time":{"start":1726944932581,"stop":1726944933518,"duration":937},"status":"passed","steps":[{"name":"Insert email","time":{"start":1726944932581,"stop":1726944933159,"duration":578},"status":"passed","steps":[{"name":"input text","time":{"start":1726944932581,"stop":1726944933159,"duration":578},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true},{"name":"get_fake_password","time":{"start":1726944933159,"stop":1726944933159,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Insert password","time":{"start":1726944933159,"stop":1726944933518,"duration":359},"status":"passed","steps":[{"name":"input text","time":{"start":1726944933159,"stop":1726944933518,"duration":359},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":5,"attachmentsCount":0,"hasContent":true},{"name":"Click on Sign in btn","time":{"start":1726944933518,"stop":1726944933670,"duration":152},"status":"passed","steps":[{"name":"Click Sign in button","time":{"start":1726944933518,"stop":1726944933670,"duration":152},"status":"passed","steps":[{"name":"click button","time":{"start":1726944933519,"stop":1726944933670,"duration":151},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"'//button[@type='submit']'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true},{"name":"Verify invalid credentials alert","time":{"start":1726944933670,"stop":1726944935202,"duration":1532},"status":"failed","statusMessage":"AssertionError: assert 'Invalid credentials.' in '×Too many failed login attempts, please try again in 7 minutes.'\n +  where '×Too many failed login attempts, please try again in 7 minutes.' = get_alert_message()\n +    where get_alert_message = <src.pages.login_page.login_page.LoginPage object at 0x7f726fbbee40>.get_alert_message\n","statusTrace":"  File \"/home/runner/work/qa-website/qa-website/tests/auth/test_login.py\", line 71, in test_login_with_invalid_credentials\n    assert alert_msg in login_page.get_alert_message()\n","steps":[{"name":"Wait for danger alert","time":{"start":1726944933670,"stop":1726944935196,"duration":1526},"status":"passed","steps":[{"name":"wait for selector","time":{"start":1726944933670,"stop":1726944935196,"duration":1526},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"'//*[@role='alert']'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true},{"name":"Get alert message","time":{"start":1726944935196,"stop":1726944935202,"duration":6},"status":"passed","steps":[{"name":"get_text","time":{"start":1726944935196,"stop":1726944935202,"duration":6},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"locator","value":"'//*[@role='alert']'"},{"name":"index","value":"0"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true}],"attachments":[{"uid":"d821a8639cee2418","name":"Location","source":"d821a8639cee2418.uri","type":"text/uri-list","size":44},{"uid":"d052c695c3c2f6a3","name":"Screenshot","source":"d052c695c3c2f6a3.png","type":"image/png","size":175809}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":16,"attachmentsCount":2,"hasContent":true},"afterStages":[{"name":"context::0","time":{"start":1726944935676,"stop":1726944935796,"duration":120},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"suite","value":"Authorization"},{"name":"parentSuite","value":"tests.auth"},{"name":"subSuite","value":"TestLogin"},{"name":"host","value":"fv-az1521-508"},{"name":"thread","value":"5413-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.auth.test_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"login_value","value":"'password'"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"da07d3763c0d7a8f.json","parameterValues":["'password'"]}