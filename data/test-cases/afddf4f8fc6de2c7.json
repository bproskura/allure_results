{"uid":"afddf4f8fc6de2c7","name":"Create template bot","fullName":"tests.bots.test_create_bot.TestCreateBot#test_create_template_bot","historyId":"ee66d7198fa6a0cc745a78b01f768a5e","time":{"start":1726944952249,"stop":1726944954329,"duration":2080},"descriptionHtml":"<h4 style=\"margin: -10px 0 5px;\"><span style=\"margin: 9px 4px 9px 0; cursor: pointer\" class=\"fa fa-files-o\" data-copy=\"test_create_template_bot\"></span>test_create_template_bot</h4>\n    Collected at <span class=\"label label_status_passed\">2024-09-21 18:54</span><br><br>","status":"broken","statusMessage":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://dev.api.darkbot.io/auth/login","statusTrace":"self = <bots.test_create_bot.TestCreateBot object at 0x7f726fcc8800>\npage = <Page url='https://darkbot:98713456@dev.app.darkbot.io/'>\ncreate_session = <function create_session.<locals>._create_session at 0x7f726cd0fba0>\n\n    @allure.title(\"Create template bot\")\n    def test_create_template_bot(self, page: Page, create_session):\n        login_page = LoginPage(page)\n        bots_page = BotsPage(page)\n        bot_wizard = BotWizard(page)\n        bot_details_page = BotDetailsPage(page)\n        bot_card = \"Use template\"\n        bot_type = \"template\"\n    \n        with allure.step(\"Test preparation\"):\n            login_page.goto()\n>           create_session()\n\nbot_card   = 'Use template'\nbot_details_page = <src.pages.bot_details_page.bot_details_page.BotDetailsPage object at 0x7f726cd3a6f0>\nbot_type   = 'template'\nbot_wizard = <src.pages.bot_wizard.BotWizard object at 0x7f726cd3a6c0>\nbots_page  = <src.pages.bots_page.bots_page.BotsPage object at 0x7f726cd3a690>\ncreate_session = <function create_session.<locals>._create_session at 0x7f726cd0fba0>\nlogin_page = <src.pages.login_page.login_page.LoginPage object at 0x7f726cd3a660>\npage       = <Page url='https://darkbot:98713456@dev.app.darkbot.io/'>\nself       = <bots.test_create_bot.TestCreateBot object at 0x7f726fcc8800>\n\ntests/bots/test_create_bot.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nconftest.py:132: in _create_session\n    localStorage.setItem('token', '{prepare_user_session(auth_data=auth_data)}');\n        auth_data  = {'password': 'darkbot123', 'token': 'token', 'username': 'premium@darkbot.io'}\n        page       = <Page url='https://darkbot:98713456@dev.app.darkbot.io/'>\n        prepare_user_session = <function prepare_user_session at 0x7f726cdf65c0>\nmodules/Utils.py:56: in prepare_user_session\n    res = AuthApi(auth_data=auth_data)\n        auth_data  = {'password': 'darkbot123', 'token': 'token', 'username': 'premium@darkbot.io'}\nsrc/api/base_api.py:22: in __init__\n    self._login(auth_data)\n        auth_data  = {'password': 'darkbot123', 'token': 'token', 'username': 'premium@darkbot.io'}\n        jwt_token  = None\n        lang       = 'en'\n        self       = <src.api.auth.register_api.AuthApi object at 0x7f726cd52cf0>\nsrc/api/base_api.py:30: in _login\n    raise e\n        auth_data  = {'password': 'darkbot123', 'token': 'token', 'username': 'premium@darkbot.io'}\n        response   = <Response [401]>\n        self       = <src.api.auth.register_api.AuthApi object at 0x7f726cd52cf0>\nsrc/api/base_api.py:27: in _login\n    response.raise_for_status()\n        auth_data  = {'password': 'darkbot123', 'token': 'token', 'username': 'premium@darkbot.io'}\n        response   = <Response [401]>\n        self       = <src.api.auth.register_api.AuthApi object at 0x7f726cd52cf0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [401]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://dev.api.darkbot.io/auth/login\n\nhttp_error_msg = '401 Client Error: Unauthorized for url: https://dev.api.darkbot.io/auth/login'\nreason     = 'Unauthorized'\nself       = <Response [401]>\n\n/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/requests/models.py:1021: HTTPError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"context","time":{"start":1726944952054,"stop":1726944952209,"duration":155},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"page","time":{"start":1726944952210,"stop":1726944952248,"duration":38},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"create_session","time":{"start":1726944952248,"stop":1726944952249,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"descriptionHtml":"<h4 style=\"margin: -10px 0 5px;\"><span style=\"margin: 9px 4px 9px 0; cursor: pointer\" class=\"fa fa-files-o\" data-copy=\"test_create_template_bot\"></span>test_create_template_bot</h4>\n    Collected at <span class=\"label label_status_passed\">2024-09-21 18:54</span><br><br>","status":"broken","statusMessage":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://dev.api.darkbot.io/auth/login","statusTrace":"self = <bots.test_create_bot.TestCreateBot object at 0x7f726fcc8800>\npage = <Page url='https://darkbot:98713456@dev.app.darkbot.io/'>\ncreate_session = <function create_session.<locals>._create_session at 0x7f726cd0fba0>\n\n    @allure.title(\"Create template bot\")\n    def test_create_template_bot(self, page: Page, create_session):\n        login_page = LoginPage(page)\n        bots_page = BotsPage(page)\n        bot_wizard = BotWizard(page)\n        bot_details_page = BotDetailsPage(page)\n        bot_card = \"Use template\"\n        bot_type = \"template\"\n    \n        with allure.step(\"Test preparation\"):\n            login_page.goto()\n>           create_session()\n\nbot_card   = 'Use template'\nbot_details_page = <src.pages.bot_details_page.bot_details_page.BotDetailsPage object at 0x7f726cd3a6f0>\nbot_type   = 'template'\nbot_wizard = <src.pages.bot_wizard.BotWizard object at 0x7f726cd3a6c0>\nbots_page  = <src.pages.bots_page.bots_page.BotsPage object at 0x7f726cd3a690>\ncreate_session = <function create_session.<locals>._create_session at 0x7f726cd0fba0>\nlogin_page = <src.pages.login_page.login_page.LoginPage object at 0x7f726cd3a660>\npage       = <Page url='https://darkbot:98713456@dev.app.darkbot.io/'>\nself       = <bots.test_create_bot.TestCreateBot object at 0x7f726fcc8800>\n\ntests/bots/test_create_bot.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nconftest.py:132: in _create_session\n    localStorage.setItem('token', '{prepare_user_session(auth_data=auth_data)}');\n        auth_data  = {'password': 'darkbot123', 'token': 'token', 'username': 'premium@darkbot.io'}\n        page       = <Page url='https://darkbot:98713456@dev.app.darkbot.io/'>\n        prepare_user_session = <function prepare_user_session at 0x7f726cdf65c0>\nmodules/Utils.py:56: in prepare_user_session\n    res = AuthApi(auth_data=auth_data)\n        auth_data  = {'password': 'darkbot123', 'token': 'token', 'username': 'premium@darkbot.io'}\nsrc/api/base_api.py:22: in __init__\n    self._login(auth_data)\n        auth_data  = {'password': 'darkbot123', 'token': 'token', 'username': 'premium@darkbot.io'}\n        jwt_token  = None\n        lang       = 'en'\n        self       = <src.api.auth.register_api.AuthApi object at 0x7f726cd52cf0>\nsrc/api/base_api.py:30: in _login\n    raise e\n        auth_data  = {'password': 'darkbot123', 'token': 'token', 'username': 'premium@darkbot.io'}\n        response   = <Response [401]>\n        self       = <src.api.auth.register_api.AuthApi object at 0x7f726cd52cf0>\nsrc/api/base_api.py:27: in _login\n    response.raise_for_status()\n        auth_data  = {'password': 'darkbot123', 'token': 'token', 'username': 'premium@darkbot.io'}\n        response   = <Response [401]>\n        self       = <src.api.auth.register_api.AuthApi object at 0x7f726cd52cf0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [401]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://dev.api.darkbot.io/auth/login\n\nhttp_error_msg = '401 Client Error: Unauthorized for url: https://dev.api.darkbot.io/auth/login'\nreason     = 'Unauthorized'\nself       = <Response [401]>\n\n/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/requests/models.py:1021: HTTPError","steps":[{"name":"Test preparation","time":{"start":1726944952249,"stop":1726944954326,"duration":2077},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://dev.api.darkbot.io/auth/login\n","statusTrace":"  File \"/home/runner/work/qa-website/qa-website/tests/bots/test_create_bot.py\", line 72, in test_create_template_bot\n    create_session()\n  File \"/home/runner/work/qa-website/qa-website/conftest.py\", line 132, in _create_session\n    localStorage.setItem('token', '{prepare_user_session(auth_data=auth_data)}');\n                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/qa-website/qa-website/modules/Utils.py\", line 56, in prepare_user_session\n    res = AuthApi(auth_data=auth_data)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/qa-website/qa-website/src/api/base_api.py\", line 22, in __init__\n    self._login(auth_data)\n  File \"/home/runner/work/qa-website/qa-website/src/api/base_api.py\", line 30, in _login\n    raise e\n  File \"/home/runner/work/qa-website/qa-website/src/api/base_api.py\", line 27, in _login\n    response.raise_for_status()\n  File \"/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/requests/models.py\", line 1021, in raise_for_status\n    raise HTTPError(http_error_msg, response=self)\n","steps":[{"name":"goto route","time":{"start":1726944952249,"stop":1726944953602,"duration":1353},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true}],"attachments":[{"uid":"450675d5ae316709","name":"Location","source":"450675d5ae316709.uri","type":"text/uri-list","size":44},{"uid":"eddb8117f76c5070","name":"Screenshot","source":"eddb8117f76c5070.png","type":"image/png","size":175928},{"uid":"95eabbc4ae801f83","name":"log","source":"95eabbc4ae801f83.txt","type":"text/plain","size":467}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":3,"hasContent":true},"afterStages":[{"name":"context::0","time":{"start":1726944954571,"stop":1726944954637,"duration":66},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"suite","value":"Create bot"},{"name":"parentSuite","value":"tests.bots"},{"name":"subSuite","value":"TestCreateBot"},{"name":"host","value":"fv-az1521-508"},{"name":"thread","value":"5413-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.bots.test_create_bot"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"eb8c3f823bf19c65","status":"broken","statusDetails":"requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://dev.api.darkbot.io/auth/login","time":{"start":1726944949527,"stop":1726944951835,"duration":2308}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":4,"unknown":0,"total":5},"items":[{"uid":"95767d330a9ed2d8","reportUrl":"https://darkbot-io.github.io/qa-website/531//#testresult/95767d330a9ed2d8","status":"passed","time":{"start":1726942953418,"stop":1726942980689,"duration":27271}},{"uid":"df1e35a56c2c2ee","reportUrl":"https://darkbot-io.github.io/qa-website/529//#testresult/df1e35a56c2c2ee","status":"passed","time":{"start":1726772212349,"stop":1726772240425,"duration":28076}},{"uid":"94c39d487a253132","reportUrl":"https://darkbot-io.github.io/qa-website/528//#testresult/94c39d487a253132","status":"passed","time":{"start":1726333780783,"stop":1726333807712,"duration":26929}},{"uid":"e780f2ef692fee0","reportUrl":"https://darkbot-io.github.io/qa-website/527//#testresult/e780f2ef692fee0","status":"passed","time":{"start":1725728940517,"stop":1725728967698,"duration":27181}}]},"tags":[]},"source":"afddf4f8fc6de2c7.json","parameterValues":[]}