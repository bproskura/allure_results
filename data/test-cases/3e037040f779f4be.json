{"uid":"3e037040f779f4be","name":"Connect new exchange","fullName":"tests.credentials.test_connect_exchange.TestConnectExchange#test_connect_exchange","historyId":"76b3ae35ee7784fa1699187ce087cebb","time":{"start":1722971364093,"stop":1722971365357,"duration":1264},"descriptionHtml":"<h4 style=\"margin: -10px 0 5px;\"><span style=\"margin: 9px 4px 9px 0; cursor: pointer\" class=\"fa fa-files-o\" data-copy=\"test_connect_exchange[Binance]\"></span>test_connect_exchange[Binance]</h4>\n    Collected at <span class=\"label label_status_passed\">2024-08-06 19:08</span><br><br>","status":"broken","statusMessage":"TypeError: unsupported operand type(s) for +: 'NoneType' and 'str'","statusTrace":"self = <credentials.test_connect_exchange.TestConnectExchange object at 0x7f53dabc2d50>\npage = <Page url='https://darkbot:98713456@dev.app.darkbot.io/'>\ncreate_session = <function create_session.<locals>._create_session at 0x7f53da0aa200>\nexchange = 'Binance'\n\n    @allure.title(\"Connect new exchange\")\n    @pytest.mark.parametrize(**CredentialsParams.ddt_exchange_value)\n    def test_connect_exchange(self, page: Page, create_session, exchange):\n        login_page = LoginPage(page)\n        credentials_page = CredentialsPage(page)\n        notifications = Notifications(page)\n        api_key = {\n            \"Binance\": cfg.BINANCE_API_KEY,\n            \"Poloniex\": cfg.POLONIEX_API_KEY,\n            \"HitBTC\": cfg.HITBTC_API_KEY,\n        }\n        secret_key = {\n            \"Binance\": cfg.BINANCE_SECRET_KEY,\n            \"Poloniex\": cfg.POLONIEX_SECRET_KEY,\n            \"HitBTC\": cfg.HITBTC_SECRET_KEY,\n        }\n    \n        toast_message = \"Credentials was successfully created.\"\n    \n        with allure.step(\"Test preparation\"):\n            login_page.goto()\n>           create_session()\n\napi_key    = {'Binance': 'AJWMNNtmbuIrpuebS2MgPFKBlK5iRTc6zECqk4pw9RjhBLTSzsofpnqGgwOMNwSH', 'HitBTC': 'Mhc4KBMfGmi11WkiqGsAS9LS3M2Dhn2d', 'Poloniex': '9XRJDDFA-X83E7C3T-KVKEXOXI-N65DV9OU'}\ncreate_session = <function create_session.<locals>._create_session at 0x7f53da0aa200>\ncredentials_page = <src.pages.credentials_page.credentials_page.CredentialsPage object at 0x7f53ccff0920>\nexchange   = 'Binance'\nlogin_page = <src.pages.login_page.login_page.LoginPage object at 0x7f53ccff0770>\nnotifications = <src.pages.notifications.Notifications object at 0x7f53ccff3ef0>\npage       = <Page url='https://darkbot:98713456@dev.app.darkbot.io/'>\nsecret_key = {'Binance': 'Hh4twEoXrdvUvv0q9gAJuhne1WdUMtx9Q2bVfYiT3I4qIdZ8SUVirZmM010sFSLX', 'HitBTC': 'awLcD9SCYFyR8dJYyRor5SEdJLE...783da8515f572cace50d976b8acff04e2dec84541fc2d18b4d4cbfc49ab72c78954bb15146e3bddf3025c4a0f29e8ba3488b231ce8446d4f9b712'}\nself       = <credentials.test_connect_exchange.TestConnectExchange object at 0x7f53dabc2d50>\ntoast_message = 'Credentials was successfully created.'\n\ntests/credentials/test_connect_exchange.py:44: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nconftest.py:134: in _create_session\n    localStorage.setItem('token', '{prepare_user_session(auth_data=auth_data)}');\n        auth_data  = {'password': 'darkbot123', 'token': 'token', 'username': 'premium@darkbot.io'}\n        page       = <Page url='https://darkbot:98713456@dev.app.darkbot.io/'>\n        prepare_user_session = <function prepare_user_session at 0x7f53c6ad1e40>\nmodules/Utils.py:56: in prepare_user_session\n    res = AuthApi(auth_data=auth_data)\n        auth_data  = {'password': 'darkbot123', 'token': 'token', 'username': 'premium@darkbot.io'}\nsrc/api/base_api.py:22: in __init__\n    self._login(auth_data)\n        auth_data  = {'password': 'darkbot123', 'token': 'token', 'username': 'premium@darkbot.io'}\n        jwt_token  = None\n        lang       = 'en'\n        self       = <src.api.auth.register_api.AuthApi object at 0x7f53da6cbe90>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <src.api.auth.register_api.AuthApi object at 0x7f53da6cbe90>\nauth_data = {'password': 'darkbot123', 'token': 'token', 'username': 'premium@darkbot.io'}\n\n    def _login(self, auth_data: dict):\n>       response = self.s.post(self.BASE_URL + Auth.login, json=auth_data, verify=certifi.where())\nE       TypeError: unsupported operand type(s) for +: 'NoneType' and 'str'\n\nauth_data  = {'password': 'darkbot123', 'token': 'token', 'username': 'premium@darkbot.io'}\nself       = <src.api.auth.register_api.AuthApi object at 0x7f53da6cbe90>\n\nsrc/api/base_api.py:25: TypeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"context","time":{"start":1722971363831,"stop":1722971364043,"duration":212},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"page","time":{"start":1722971364043,"stop":1722971364092,"duration":49},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"create_session","time":{"start":1722971364092,"stop":1722971364092,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"descriptionHtml":"<h4 style=\"margin: -10px 0 5px;\"><span style=\"margin: 9px 4px 9px 0; cursor: pointer\" class=\"fa fa-files-o\" data-copy=\"test_connect_exchange[Binance]\"></span>test_connect_exchange[Binance]</h4>\n    Collected at <span class=\"label label_status_passed\">2024-08-06 19:08</span><br><br>","status":"broken","statusMessage":"TypeError: unsupported operand type(s) for +: 'NoneType' and 'str'","statusTrace":"self = <credentials.test_connect_exchange.TestConnectExchange object at 0x7f53dabc2d50>\npage = <Page url='https://darkbot:98713456@dev.app.darkbot.io/'>\ncreate_session = <function create_session.<locals>._create_session at 0x7f53da0aa200>\nexchange = 'Binance'\n\n    @allure.title(\"Connect new exchange\")\n    @pytest.mark.parametrize(**CredentialsParams.ddt_exchange_value)\n    def test_connect_exchange(self, page: Page, create_session, exchange):\n        login_page = LoginPage(page)\n        credentials_page = CredentialsPage(page)\n        notifications = Notifications(page)\n        api_key = {\n            \"Binance\": cfg.BINANCE_API_KEY,\n            \"Poloniex\": cfg.POLONIEX_API_KEY,\n            \"HitBTC\": cfg.HITBTC_API_KEY,\n        }\n        secret_key = {\n            \"Binance\": cfg.BINANCE_SECRET_KEY,\n            \"Poloniex\": cfg.POLONIEX_SECRET_KEY,\n            \"HitBTC\": cfg.HITBTC_SECRET_KEY,\n        }\n    \n        toast_message = \"Credentials was successfully created.\"\n    \n        with allure.step(\"Test preparation\"):\n            login_page.goto()\n>           create_session()\n\napi_key    = {'Binance': 'AJWMNNtmbuIrpuebS2MgPFKBlK5iRTc6zECqk4pw9RjhBLTSzsofpnqGgwOMNwSH', 'HitBTC': 'Mhc4KBMfGmi11WkiqGsAS9LS3M2Dhn2d', 'Poloniex': '9XRJDDFA-X83E7C3T-KVKEXOXI-N65DV9OU'}\ncreate_session = <function create_session.<locals>._create_session at 0x7f53da0aa200>\ncredentials_page = <src.pages.credentials_page.credentials_page.CredentialsPage object at 0x7f53ccff0920>\nexchange   = 'Binance'\nlogin_page = <src.pages.login_page.login_page.LoginPage object at 0x7f53ccff0770>\nnotifications = <src.pages.notifications.Notifications object at 0x7f53ccff3ef0>\npage       = <Page url='https://darkbot:98713456@dev.app.darkbot.io/'>\nsecret_key = {'Binance': 'Hh4twEoXrdvUvv0q9gAJuhne1WdUMtx9Q2bVfYiT3I4qIdZ8SUVirZmM010sFSLX', 'HitBTC': 'awLcD9SCYFyR8dJYyRor5SEdJLE...783da8515f572cace50d976b8acff04e2dec84541fc2d18b4d4cbfc49ab72c78954bb15146e3bddf3025c4a0f29e8ba3488b231ce8446d4f9b712'}\nself       = <credentials.test_connect_exchange.TestConnectExchange object at 0x7f53dabc2d50>\ntoast_message = 'Credentials was successfully created.'\n\ntests/credentials/test_connect_exchange.py:44: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nconftest.py:134: in _create_session\n    localStorage.setItem('token', '{prepare_user_session(auth_data=auth_data)}');\n        auth_data  = {'password': 'darkbot123', 'token': 'token', 'username': 'premium@darkbot.io'}\n        page       = <Page url='https://darkbot:98713456@dev.app.darkbot.io/'>\n        prepare_user_session = <function prepare_user_session at 0x7f53c6ad1e40>\nmodules/Utils.py:56: in prepare_user_session\n    res = AuthApi(auth_data=auth_data)\n        auth_data  = {'password': 'darkbot123', 'token': 'token', 'username': 'premium@darkbot.io'}\nsrc/api/base_api.py:22: in __init__\n    self._login(auth_data)\n        auth_data  = {'password': 'darkbot123', 'token': 'token', 'username': 'premium@darkbot.io'}\n        jwt_token  = None\n        lang       = 'en'\n        self       = <src.api.auth.register_api.AuthApi object at 0x7f53da6cbe90>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <src.api.auth.register_api.AuthApi object at 0x7f53da6cbe90>\nauth_data = {'password': 'darkbot123', 'token': 'token', 'username': 'premium@darkbot.io'}\n\n    def _login(self, auth_data: dict):\n>       response = self.s.post(self.BASE_URL + Auth.login, json=auth_data, verify=certifi.where())\nE       TypeError: unsupported operand type(s) for +: 'NoneType' and 'str'\n\nauth_data  = {'password': 'darkbot123', 'token': 'token', 'username': 'premium@darkbot.io'}\nself       = <src.api.auth.register_api.AuthApi object at 0x7f53da6cbe90>\n\nsrc/api/base_api.py:25: TypeError","steps":[{"name":"Test preparation","time":{"start":1722971364093,"stop":1722971365356,"duration":1263},"status":"broken","statusMessage":"TypeError: unsupported operand type(s) for +: 'NoneType' and 'str'\n","statusTrace":"  File \"/home/runner/work/qa-website/qa-website/tests/credentials/test_connect_exchange.py\", line 44, in test_connect_exchange\n    create_session()\n  File \"/home/runner/work/qa-website/qa-website/conftest.py\", line 134, in _create_session\n    localStorage.setItem('token', '{prepare_user_session(auth_data=auth_data)}');\n                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/qa-website/qa-website/modules/Utils.py\", line 56, in prepare_user_session\n    res = AuthApi(auth_data=auth_data)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/qa-website/qa-website/src/api/base_api.py\", line 22, in __init__\n    self._login(auth_data)\n  File \"/home/runner/work/qa-website/qa-website/src/api/base_api.py\", line 25, in _login\n    response = self.s.post(self.BASE_URL + Auth.login, json=auth_data, verify=certifi.where())\n                           ~~~~~~~~~~~~~~^~~~~~~~~~~~\n","steps":[{"name":"goto ''","time":{"start":1722971364093,"stop":1722971365355,"duration":1262},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"base_url","value":"'https://darkbot:98713456@dev.app.darkbot.io/'"},{"name":"endpoint","value":"''"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"a916db98af39a8e2","name":"Location","source":"a916db98af39a8e2.uri","type":"text/uri-list","size":44},{"uid":"5a16e5c23ec53bcc","name":"Screenshot","source":"5a16e5c23ec53bcc.png","type":"image/png","size":175792}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"context::0","time":{"start":1722971366238,"stop":1722971366354,"duration":116},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"suite","value":"Connect exchange"},{"name":"parentSuite","value":"tests.credentials"},{"name":"subSuite","value":"TestConnectExchange"},{"name":"host","value":"fv-az1149-304"},{"name":"thread","value":"5417-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.credentials.test_connect_exchange"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"exchange","value":"'Binance'"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"3e037040f779f4be.json","parameterValues":["'Binance'"]}